{"version":3,"sources":["webpack:///webpack/bootstrap 7669bdd256d4ad983b48","webpack:///./src/index.js","webpack:///external \"graphql-yoga\"","webpack:///external \"prisma-binding\"","webpack:///external \"aws-sls-auther\""],"names":["resolvers","Query","allRoutes","parent","type","ctx","info","where","type_contains","db","query","routes","allPublicRoutes","args","public","isJwtAuthorized","jwt","autho","isAuthorized","console","log","Mutation","auth","username","password","authenticate","whereUsername","userId","users","id","data","mutation","updateUser","server","typeDefs","context","req","endpoint","debug","start","process","env","AUTHER_ENDPOINT"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7669bdd256d4ad983b48","import { GraphQLServer } from \"graphql-yoga\";\nimport { PRISMA_ENDPOINT } from \"babel-dotenv\";\nimport { Prisma } from \"prisma-binding\";\nimport { authenticate, isAuthorized } from \"aws-sls-auther\";\n\n//TODO: Create resolvers directory with lazy loading index / spread\nconst resolvers = {\n  Query: {\n    allRoutes: (parent, { type }, ctx, info) => {\n      const where = type ? { type_contains: type } : {};\n      return ctx.db.query.routes({ where }, info);\n    },\n    allPublicRoutes: (parent, args, ctx, info) => {\n      const where = { public: true };\n      return ctx.db.query.routes({ where }, info);\n    },\n    isJwtAuthorized: async (parent, { jwt }, ctx, info) => {\n      let autho = await isAuthorized(jwt);\n      console.log(autho);\n      return autho;\n    }\n  },\n  Mutation: {\n    //First, get user/pass. Note: aws-sls-auther will need to flex b/w online & offline\n    auth: async (parent, { username, password }, ctx, info) => {\n      //Grab token, which we will use in mutation\n      let jwt = await authenticate(username, password);\n\n      //Define condition for querying all users with specific username\n      //Username should be unique. Assumption I'm making here is username==email\n      const whereUsername = username ? { username } : {};\n\n      //Grab id field from all users which have username (hopefully only 1)\n      let userId = await ctx.db.query.users({ where: whereUsername }, `{ id }`);\n\n      //Update the first user ID with JWT\n      //TODO: add checking here to ensure there's only one returned user IDA\n      const where = { id: userId[0].id };\n      console.log(`jwt: ${jwt}`);\n\n      //Creating this variable for visual consistency. Not necessary.\n      const data = { jwt };\n\n      //Finally, we update our user with the JWT received earlier\n      return ctx.db.mutation.updateUser({ where, data }, info);\n    }\n  }\n};\n\n//test working copy\n\n//TODO: Replace all endpoints with env variables\nconst server = new GraphQLServer({\n  typeDefs: \"src/schema.graphql\",\n  resolvers,\n  context: req => ({\n    ...req,\n    db: new Prisma({\n      typeDefs: \"src/generated/prisma.graphql\", // the auto-generated GraphQL schema of the Prisma API\n      endpoint: PRISMA_ENDPOINT, // the endpoint of the Prisma API\n      debug: true // log all GraphQL queries & mutations sent to the Prisma API\n      // secret: process.env.PRISMA_SECRET // only needed if specified in `database/prisma.yml`\n    })\n  })\n});\n\nserver.start(() => {\n  process.env.AUTHER_ENDPOINT = \"http://localhost:3000/api\";\n  console.log(`Prisma-starter running => http://localhost:4000`);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"graphql-yoga\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-yoga\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"prisma-binding\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prisma-binding\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"aws-sls-auther\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sls-auther\"\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}